#!/usr/bin/env node

var config = require('../config/cluster-config');
var HappnCluster = require('happn-cluster');
var Happn = require('happn-3');
var ConductorClient = require('../lib/conductor-client');
var conductorClient = new ConductorClient();

var clusterServer;
var conductorClientInstance;
var clusterClientInstance;

HappnCluster.create(config)

  .then(function (_server) {
    clusterServer = _server;
    if (process.env.CONDUCTOR_URL) {
      return Happn.client.create({
        protocol: 'https',
        allowSelfSignedCerts: true,
        username: '_ADMIN',
        password: process.env.CONDUCTOR_PASSWORD,
        url: process.env.CONDUCTOR_URL,
        info: {
          name: clusterServer.name
        }
      });
    }
  })

  .then(function (happnClient) {
    if (!happnClient) return;
    conductorClientInstance = happnClient;
  })

  .then(function () {

    var protocol = clusterServer.services.transport.config.mode;
    var address = clusterServer.server.address();
    var happnUrl = address.address;

    happnUrl += ':' + address.port;
    happnUrl = protocol + '://' + happnUrl;

    return Happn.client.create({
      username: '_ADMIN',
      password: process.env.ADMIN_PASSWORD,
      url: happnUrl
    })
  })

  .then(function (happnClient) {
    clusterClientInstance = happnClient;
  })

  .then(function() {
    return conductorClient.run(conductorClientInstance, clusterClientInstance);
  })

  .catch(function (error) {
    console.error(error.stack || error);
    process.exit(1);
  });
